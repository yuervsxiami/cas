##
# CAS Server Context Configuration
#
server.context-path=/cas
server.port=8443

server.ssl.key-store=/etc/cas/thekeystore
server.ssl.key-store-password=123456
server.ssl.key-password=123456

server.max-http-header-size=2097152
server.use-forward-headers=true
server.connection-timeout=20000
server.error.incl-stacktrace=ALWAYS

server.compression.enabled=true
server.compression.mime-types=application/javascript,application/json,application/xml,text/html,text/xml,text/plain

server.tomcat.max-http-post-size=2097152
server.tomcat.basedir=build/tomcat
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)
server.tomcat.accesslog.suffix=.log
server.tomcat.min-spare-threads=10
server.tomcat.max-threads=200
server.tomcat.port-header=X-Forwarded-Port
server.tomcat.protocol-header=X-Forwarded-Proto
server.tomcat.protocol-header-https-value=https
server.tomcat.remote-ip-header=X-FORWARDED-FOR
server.tomcat.uri-encoding=UTF-8

spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

##
# CAS Cloud Bus Configuration
#
spring.cloud.bus.enabled=false

# Indicates that systemPropertiesOverride can be used.
# Set to false to prevent users from changing the default accidentally. Default true.
spring.cloud.config.allow-override=true

# External properties should override system properties.
spring.cloud.config.override-system-properties=false

# When allowOverride is true, external properties should take lowest priority, and not override any
# existing property sources (including local config files).
spring.cloud.config.override-none=false

# spring.cloud.bus.refresh.enabled=true
# spring.cloud.bus.env.enabled=true
# spring.cloud.bus.destination=CasCloudBus
# spring.cloud.bus.ack.enabled=true

endpoints.enabled=false
endpoints.sensitive=true

endpoints.restart.enabled=false
endpoints.shutdown.enabled=false

# Control the security of the management/actuator endpoints
# The 'enabled' flag below here controls the rendering of details for the health endpoint amongst other things.
management.security.enabled=true
management.security.roles=ACTUATOR,ADMIN
management.security.sessions=if_required
management.context-path=/status
management.add-application-context-header=false

# Define a CAS-specific "WARN" status code and its order
management.health.status.order=WARN, DOWN, OUT_OF_SERVICE, UNKNOWN, UP

# Control the security of the management/actuator endpoints
# With basic authentication, assuming Spring Security and/or relevant modules are on the classpath.
security.basic.authorize-mode=role
security.basic.path=/cas/status/**
# security.basic.enabled=true
# security.user.name=casuser
# security.user.password=

##
# CAS Web Application Session Configuration
#
server.session.timeout=300
server.session.cookie.http-only=true
server.session.tracking-modes=COOKIE

##
# CAS Thymeleaf View Configuration
#
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=true
spring.thymeleaf.mode= HTML5
spring.thymeleaf.template-resolver-order=100
##
# CAS Log4j Configuration
#
# logging.config=file:/etc/cas/log4j2.xml
server.context-parameters.isLog4jAutoInitializationDisabled=true

##
# CAS AspectJ Configuration
#
spring.aop.auto=true
spring.aop.proxy-target-class=true

# 数据库相关配置 https://apereo.github.io/cas/5.3.x/installation/Configuration-Properties-Common.html#database-settings
spring.jpa.show-sql=true
sso.cas.database.username=root
sso.cas.database.password=root
sso.cas.database.url=jdbc:mysql://192.168.4.130:3306/cas?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false
sso.cas.database.driver-class-name=com.mysql.jdbc.Driver
sso.cas.database.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#设置配置的服务，一直都有，不会给清除掉 ， 第一次使用，需要配置为 create-drop
#create-drop 重启cas服务的时候，就会给干掉
#create  没有表就创建，有就不创建
#none 一直都有
#update 更新
sso.cas.database.ddlAuto=none
##
# CAS Authentication Credentials
#
# 静态用户 cas.authn.accept.users=casuser::Mellon
#-----------------------------数据库认证--------------------------------
cas.authn.jdbc.query[0].ddl-auto=${sso.cas.database.ddlAuto}
cas.authn.jdbc.query[0].user=root
cas.authn.jdbc.query[0].password=root
cas.authn.jdbc.query[0].url=jdbc:mysql://192.168.4.130:3306/dn_mall?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false
cas.authn.jdbc.query[0].dialect=${sso.cas.database.dialect}
cas.authn.jdbc.query[0].driverClass=${sso.cas.database.driver-class-name}
cas.authn.jdbc.query[0].sql=SELECT * FROM tb_member WHERE username = ? 
cas.authn.jdbc.query[0].principal-attribute-list=username,id,email,phone,file,sex
# 多属性返回
cas.authn.attribute-repository.jdbc[0].single-row=true
cas.authn.attribute-repository.jdbc[0].order=0
cas.authn.attribute-repository.jdbc[0].ddl-auto=${sso.cas.database.ddlAuto}
cas.authn.attribute-repository.jdbc[0].user=root
cas.authn.attribute-repository.jdbc[0].password=root
cas.authn.attribute-repository.jdbc[0].url=jdbc:mysql://192.168.4.130:3306/dn_mall?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false
cas.authn.attribute-repository.jdbc[0].dialect=${sso.cas.database.dialect}
cas.authn.attribute-repository.jdbc[0].driverClass=${sso.cas.database.driver-class-name}
cas.authn.attribute-repository.jdbc[0].sql=SELECT id,username,file,address,email,phone FROM tb_member WHERE username = ? 
cas.authn.attribute-repository.jdbc[0].attributes.id=id
cas.authn.attribute-repository.jdbc[0].attributes.username=username

#密码字段的信息
cas.authn.jdbc.query[0].fieldPassword=PASSWORD
##加密策略
cas.authn.jdbc.query[0].passwordEncoder.type=DEFAULT
cas.authn.jdbc.query[0].passwordEncoder.characterEncoding=UTF-8
#MD5加密策略
cas.authn.jdbc.query[0].passwordEncoder.encodingAlgorithm=MD5


#------------------ 应用注册中心 https://apereo.github.io/cas/5.3.x/installation/Configuration-Properties.html#service-registry
cas.serviceRegistry.watcherEnabled=true
cas.serviceRegistry.schedule.repeatInterval=30000
cas.serviceRegistry.schedule.startDelay=15000
#关闭识别json文件，默认false 
cas.serviceRegistry.initFromJson=false
#配置将service配置到数据库中
cas.service-registry.jpa.user=${sso.cas.database.username}
cas.service-registry.jpa.password=${sso.cas.database.password}
cas.service-registry.jpa.url=${sso.cas.database.url}
cas.service-registry.jpa.dialect=${sso.cas.database.dialect}
cas.service-registry.jpa.driver-class=${sso.cas.database.driver-class-name}
cas.service-registry.jpa.ddl-auto=${sso.cas.database.ddlAuto}

#配置结束
################################################


cas.server.http.port=8080
cas.server.http.protocol=org.apache.coyote.http11.Http11NioProtocol
cas.server.http.enabled=true
cas.server.http.attributes.attributeName=attributeValue
# 非https下也可以使用
cas.tgc.secure=false
cas.logout.follow-service-redirects=true
#cas.logout.redirectParameter=service
#cas.logout.redirectUrl=https://www.github.com
#cas.logout.confirmLogout=false
#cas.logout.removeDescendantTickets=false
cas.http-web-request.cors.enabled=true
cas.http-web-request.cors.allow-credentials=true
cas.http-web-request.cors.allow-origins[0]=*
cas.http-web-request.cors.allow-methods[0]=*
cas.http-web-request.cors.allow-headers[0]=*
cas.http-web-request.custom-headers.cas=true
cas.http-web-request.custom-headers.Access-Control-Expose-Headers=cas